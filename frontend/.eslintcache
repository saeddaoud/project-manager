[{"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\index.js":"1","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\App.js":"2","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\HomeScreen.js":"3","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\LoginScreen.js":"4","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Header.js":"6","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\store.js":"7","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\RegistrationScreen.js":"8","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\employeeReducers.js":"9","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\employeeConstants.js":"10","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\employeeActions.js":"11","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Message.js":"12","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Spinner.js":"13","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProfileScreen.js":"14","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeProfileScreen.js":"15","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\projectReducers.js":"16","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\projectConstants.js":"17","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\projectActions.js":"18","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectScreen.js":"19","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesScreen.js":"20","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectsScreen.js":"21","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TasksScreen.js":"22","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Projects.js":"23","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesProjectsScreen.js":"24","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\BackDrop.js":"25","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AddEditProjectForm.js":"26","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Tasks.js":"27","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\taskReducers.js":"28","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\taskConstants.js":"29","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\taskActions.js":"30","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AddEditTaskForm.js":"31","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TaskScreen.js":"32","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AssignEmployee.js":"33"},{"size":300,"mtime":1611358439826,"results":"34","hashOfConfig":"35"},{"size":1793,"mtime":1613827156118,"results":"36","hashOfConfig":"35"},{"size":894,"mtime":1613269815809,"results":"37","hashOfConfig":"35"},{"size":2445,"mtime":1613269823180,"results":"38","hashOfConfig":"35"},{"size":179,"mtime":1611361707674,"results":"39","hashOfConfig":"35"},{"size":5503,"mtime":1613363616588,"results":"40","hashOfConfig":"35"},{"size":1745,"mtime":1613887230453,"results":"41","hashOfConfig":"35"},{"size":2128,"mtime":1613269847614,"results":"42","hashOfConfig":"35"},{"size":2879,"mtime":1614927521210,"results":"43","hashOfConfig":"35"},{"size":1146,"mtime":1612927385249,"results":"44","hashOfConfig":"35"},{"size":5353,"mtime":1613529240807,"results":"45","hashOfConfig":"35"},{"size":151,"mtime":1612237225111,"results":"46","hashOfConfig":"35"},{"size":244,"mtime":1612399766640,"results":"47","hashOfConfig":"35"},{"size":5036,"mtime":1613529240809,"results":"48","hashOfConfig":"35"},{"size":847,"mtime":1613529240808,"results":"49","hashOfConfig":"35"},{"size":3941,"mtime":1613538220047,"results":"50","hashOfConfig":"35"},{"size":1546,"mtime":1613538166517,"results":"51","hashOfConfig":"35"},{"size":7542,"mtime":1613539213349,"results":"52","hashOfConfig":"35"},{"size":6060,"mtime":1613826607523,"results":"53","hashOfConfig":"35"},{"size":141,"mtime":1613267534994,"results":"54","hashOfConfig":"35"},{"size":6819,"mtime":1613537928564,"results":"55","hashOfConfig":"35"},{"size":129,"mtime":1613269849769,"results":"56","hashOfConfig":"35"},{"size":1895,"mtime":1613539655215,"results":"57","hashOfConfig":"35"},{"size":459,"mtime":1613529240809,"results":"58","hashOfConfig":"35"},{"size":133,"mtime":1613372325964,"results":"59","hashOfConfig":"35"},{"size":1760,"mtime":1613825614857,"results":"60","hashOfConfig":"35"},{"size":1663,"mtime":1613827105090,"results":"61","hashOfConfig":"35"},{"size":2143,"mtime":1613887208615,"results":"62","hashOfConfig":"35"},{"size":823,"mtime":1613887150260,"results":"63","hashOfConfig":"35"},{"size":5426,"mtime":1613890099578,"results":"64","hashOfConfig":"35"},{"size":1677,"mtime":1613826689576,"results":"65","hashOfConfig":"35"},{"size":7304,"mtime":1614927941616,"results":"66","hashOfConfig":"35"},{"size":1416,"mtime":1614927973355,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1ncunky",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\index.js",[],["139","140"],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\App.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Header.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\store.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\RegistrationScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\employeeReducers.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\employeeConstants.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\employeeActions.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Message.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Spinner.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProfileScreen.js",["141"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { fetchMe, updateAvatar } from '../redux/actions/employeeActions';\r\n\r\nimport Spinner from '../components/Spinner';\r\nimport Message from '../components/Message';\r\nimport { fetchProjects } from '../redux/actions/projectActions';\r\nimport Projects from '../components/Projects';\r\n\r\nconst ProfileScreen = () => {\r\n  const [hidden, setHidden] = useState(true);\r\n\r\n  const { user, loading: userLoading, error: userError } = useSelector(\r\n    (state) => state.meFetch\r\n  );\r\n  const {\r\n    projects,\r\n    loading: projectsLoading,\r\n    error: projectsError,\r\n  } = useSelector((state) => state.projectsFetch);\r\n\r\n  // console.log(user, loading);\r\n\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  // States\r\n  // const { users, loading, success, error } = useSelector(\r\n  //   (state) => state.employeesList\r\n  // );\r\n  // const { projects, loading, error, success } = useSelector(\r\n  //   (state) => state.projectsFetch\r\n  // );\r\n\r\n  // const clickHandler = () => {\r\n  //   console.log('clicked');\r\n  //   dispatch(listEmployees());\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // The if statement is to prevent fetching the logged in user everytime they go to their profile page, since the logged in user's info is already in the state\r\n    if (!user) {\r\n      dispatch(fetchMe());\r\n    }\r\n\r\n    if (user) {\r\n      setAvatar(user.avatar);\r\n    }\r\n\r\n    if (user && user.role !== 'employee') {\r\n      dispatch(fetchProjects({ status: 'active', limit: '3' }));\r\n      // dispatch(fetchProjects());\r\n    }\r\n\r\n    // dispatch(fetchProjects());\r\n  }, [dispatch, user]);\r\n\r\n  const handleAvatarUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('avatar', file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-date',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/v1/upload', formData, config);\r\n      // console.log(data);\r\n      setAvatar(data);\r\n      setUploading(false);\r\n      dispatch(updateAvatar(data));\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      setUploading(false);\r\n    }\r\n  };\r\n  return (\r\n    // <div className='page profile-page'>\r\n    <div className='container flex flex-jcc flex-aifs'>\r\n      {/* <button className='btn m-2' onClick={clickHandler}>\r\n          List Employees\r\n        </button> */}\r\n      {(userLoading || projectsLoading) && <Spinner />}\r\n      {userError && <Message>{userError}</Message>}\r\n      {projectsError && <Message>{projectsError}</Message>}\r\n      {!userLoading && !projectsLoading && user && (\r\n        <div className='display flex flex-fdc my-1'>\r\n          <div className='display__image'>\r\n            <div\r\n              className='image-upload my-1'\r\n              onMouseEnter={() => setHidden(false)}\r\n              onMouseLeave={() => setHidden(true)}\r\n            >\r\n              <img src={avatar} alt='avatar' />\r\n              <form className={hidden ? 'hidden' : 'shown'}>\r\n                <label htmlFor='file-input'>\r\n                  <div>\r\n                    <div>Update</div>\r\n                  </div>\r\n                </label>\r\n\r\n                <input\r\n                  id='file-input'\r\n                  type='file'\r\n                  onChange={handleAvatarUpload}\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className='h-line'></div>\r\n          <div className='display__body'>\r\n            <div className='my-1'>\r\n              <h4>\r\n                Username : <span>{user.name}</span>\r\n              </h4>\r\n              <h4>\r\n                Email : <span>{user.email}</span>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div className='h-line'></div>\r\n          <div className='recent '>\r\n            {user && user.role !== 'employee' ? (\r\n              <div className='recent-projects my-1'>\r\n                <h1>Recent Projects</h1>\r\n              </div>\r\n            ) : (\r\n              <div className='recent-tasks my-1'>\r\n                <h1>Recent Tasks</h1>\r\n              </div>\r\n            )}\r\n            {user.role !== 'employee' && projects && (\r\n              <Projects projects={projects} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* {projects && (\r\n          <div className='list'>\r\n            <ul>\r\n              {projects.map((project) => (\r\n                <Link key={project._id} to={`/project/${project._id}`}>\r\n                  <li>\r\n                    <h2>{project.name}</h2>\r\n                    <p>{project.description}</p>\r\n                  </li>\r\n                </Link>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )} */}\r\n    </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeProfileScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\projectReducers.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\projectConstants.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\projectActions.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectsScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TasksScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Projects.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesProjectsScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\BackDrop.js",[],["142","143"],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AddEditProjectForm.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Tasks.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\taskReducers.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\taskConstants.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\taskActions.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AddEditTaskForm.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TaskScreen.js",["144","145","146","147","148","149"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport AddEditProjectForm from '../components/AddEditProjectForm';\r\nimport AddEditTaskForm from '../components/AddEditTaskForm';\r\nimport Message from '../components/Message';\r\nimport Spinner from '../components/Spinner';\r\nimport Tasks from '../components/Tasks';\r\nimport AssignEmployee from '../components/AssignEmployee';\r\nimport {\r\n  fetchProject,\r\n  updateProject,\r\n  fetchProjects,\r\n} from '../redux/actions/projectActions';\r\nimport { addTask, fetchTask, updateTask } from '../redux/actions/taskActions';\r\n\r\nconst TaskScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const { task, loading, error } = useSelector((state) => state.taskFetch);\r\n  const { success } = useSelector((state) => state.taskUpdate);\r\n  // const { project } = useSelector((state) => state.projectFetch);\r\n  // const { projects } = useSelector((state) => state.projectsFetch);\r\n\r\n  //   const [employeeName, setEmployeeName] = useState('');\r\n  //   const [employeeDescription, setEmployeeDescription] = useState('');\r\n  //   const [employeeNameError, setEmployeeNameError] = useState('');\r\n  //   const [employeeDescriptionError, setEmployeeDescriptionError] = useState('');\r\n  //   const [showEmployeeForm, setShowEmployeeForm] = useState(false);\r\n\r\n  const [taskName, setTaskName] = useState('');\r\n  const [taskDescription, setTaskDescription] = useState('');\r\n  const [taskNameError, setTaskNameError] = useState('');\r\n  const [taskDescriptionError, setTaskDescriptionError] = useState('');\r\n  const [showTaskForm, setShowTaskForm] = useState(false);\r\n  const [showEmployeesList, setShowEmployeesList] = useState(false);\r\n\r\n  const id = match.params.id;\r\n\r\n  // console.log(project, projectName, projectDescription);\r\n\r\n  useEffect(() => {\r\n    if (task) {\r\n      setTaskName(task.name);\r\n      setTaskDescription(task.description);\r\n    }\r\n  }, [task]);\r\n\r\n  useEffect(() => {\r\n    // if (project) {\r\n    //   setProjectName(projectName);\r\n    //   setProjectDescription(projectDescription);\r\n    // }\r\n    dispatch(fetchTask(id));\r\n  }, [dispatch, id, success]);\r\n\r\n  //   const addEmployeeHandler = (e) => {\r\n  //     e.preventDefault();\r\n\r\n  //     if (employeeName !== '' && employeeDescription !== '') {\r\n  //       dispatch(\r\n  //         addEmployee({\r\n  //           project: project._id,\r\n  //           name: employeeName,\r\n  //           description: employeeDescription,\r\n  //         })\r\n  //       );\r\n  //       setEmployeeNameError('');\r\n  //       setEmployeeDescriptionError('');\r\n  //       setEmployeeName('');\r\n  //       setEmployeeDescription('');\r\n  //       setShowEmployeeForm(false);\r\n  //     } else {\r\n  //       if (employeeName === '') {\r\n  //         setEmployeeNameError(\"Employee's name is required\");\r\n  //       }\r\n  //       if (employeeDescription === '') {\r\n  //         setEmployeeDescriptionError(\"Employee's decsription is required\");\r\n  //       }\r\n  //     }\r\n  //   };\r\n\r\n  const editTaskHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (taskName !== '' && taskDescription !== '') {\r\n      dispatch(\r\n        updateTask({\r\n          taskId: task._id,\r\n          name: taskName,\r\n          description: taskDescription,\r\n        })\r\n      );\r\n      setTaskNameError('');\r\n      setTaskDescriptionError('');\r\n      setTaskName('');\r\n      setTaskDescription('');\r\n      setShowTaskForm(false);\r\n    } else {\r\n      if (taskName === '') {\r\n        setTaskNameError(\"Task's name is required\");\r\n      }\r\n      if (taskDescription === '') {\r\n        setTaskDescriptionError(\"Task's decsription is required\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <div className='page profile-page'>\r\n    <div className='container'>\r\n      {/* {showProjectForm && (\r\n        <AddEditProjectForm\r\n          setProjectName={setProjectName}\r\n          projectName={projectName}\r\n          projectNameError={projectNameError}\r\n          setProjectDescription={setProjectDescription}\r\n          projectDescription={projectDescription}\r\n          projectDescriptionError={projectDescriptionError}\r\n          setShowProjectForm={setShowProjectForm}\r\n          addProjectHandler={editProjectHandler}\r\n          edit={true}\r\n        />\r\n      )} */}\r\n      {showTaskForm && (\r\n        <AddEditTaskForm\r\n          setTaskName={setTaskName}\r\n          taskName={taskName}\r\n          taskNameError={taskNameError}\r\n          setTaskDescription={setTaskDescription}\r\n          taskDescription={taskDescription}\r\n          taskDescriptionError={taskDescriptionError}\r\n          setShowTaskForm={setShowTaskForm}\r\n          addTaskHandler={editTaskHandler}\r\n          edit={true}\r\n        />\r\n      )}\r\n      <div className='add-container my-1 flex flex-jcsa'>\r\n        <div\r\n          className='add-container__btn'\r\n          // onClick={() => setShowAddProjectForm(true)}\r\n        >\r\n          <div className='btn btn--dark' onClick={() => setShowTaskForm(true)}>\r\n            <i className='far fa-edit'></i> Edit Task\r\n          </div>\r\n          {/* <i className='far fa-plus-square'></i> */}\r\n        </div>\r\n        <div\r\n          className='add-container__btn'\r\n          // onClick={() => setShowAddProjectForm(true)}\r\n        >\r\n          <div\r\n            className='btn btn--dark'\r\n            onClick={() => setShowEmployeesList(true)}\r\n            //   onClick={() => setShowTaskForm(true)}\r\n          >\r\n            <i className='fas fa-plus'></i> Assign Employee\r\n          </div>\r\n          {/* <i className='far fa-plus-square'></i> */}\r\n        </div>\r\n      </div>\r\n      {loading && <Spinner />}\r\n      {error && <Message>{error}</Message>}\r\n      {task && (\r\n        <div className='project-details flex flex-fdc'>\r\n          <div className='project-summary'>\r\n            <div className='project-summary__item project-summary__item--title'>\r\n              <h3>Task's Summary</h3>\r\n            </div>\r\n\r\n            <div\r\n              className='project-summary__item project-summary__item--name flex'\r\n              style={{ width: '30%' }}\r\n            >\r\n              {task.project.name}{' '}\r\n              <Link to={`/project/${task.project._id}`}>\r\n                <div className='action-btn action-btn__link'>\r\n                  <i className='fas fa-external-link-alt'></i>{' '}\r\n                </div>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className='project-summary__item project-summary__item--name'>\r\n              {task.name}\r\n            </div>\r\n            <div className='project-summary__item project-summary__item--desc'>\r\n              {task.description}\r\n            </div>\r\n          </div>\r\n          <div className='h-line'></div>\r\n          <div className='project-tasks'>\r\n            <div className='project-tasks__title my-1'>\r\n              <h4>Task's Employees</h4>\r\n            </div>\r\n            <div className='project-tasks__list'>\r\n              {showEmployeesList && (\r\n                <AssignEmployee setShowEmployeesList={setShowEmployeesList} />\r\n              )}\r\n              {/* <Tasks tasks={project.tasks} /> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default TaskScreen;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AssignEmployee.js",["150"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listEmployees } from '../redux/actions/employeeActions';\r\n\r\nimport Spinner from '../components/Spinner';\r\nimport Message from '../components/Message';\r\n\r\nconst AssignEmployee = ({ setShowEmployeesList }) => {\r\n  const dispatch = useDispatch();\r\n  const { employees, error, loading } = useSelector(\r\n    (state) => state.employeesList\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(listEmployees());\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/* <BackDrop /> */}\r\n      {loading && <Spinner />}\r\n      {error && <Message>{error}</Message>}\r\n      <div className='employees-list-container'>\r\n        <div\r\n          className='employees-list-container__close'\r\n          onClick={() => setShowEmployeesList(false)}\r\n        >\r\n          <i className='far fa-times-circle'></i>\r\n        </div>\r\n        <ul className='employees-list'>\r\n          {employees &&\r\n            employees.map(\r\n              (employee) =>\r\n                employee.role === 'employee' && (\r\n                  <li className='employees-list__item flex' key={employee._id}>\r\n                    <div className='name'>{employee.name}</div>\r\n                    <button className='btn'>Assign</button>\r\n                  </li>\r\n                )\r\n            )}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignEmployee;\r\n",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":26,"column":10,"nodeType":"157","messageId":"158","endLine":26,"endColumn":19},{"ruleId":"151","replacedBy":"159"},{"ruleId":"153","replacedBy":"160"},{"ruleId":"155","severity":1,"message":"161","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":26},{"ruleId":"155","severity":1,"message":"162","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":13},{"ruleId":"155","severity":1,"message":"163","line":11,"column":3,"nodeType":"157","messageId":"158","endLine":11,"endColumn":15},{"ruleId":"155","severity":1,"message":"164","line":12,"column":3,"nodeType":"157","messageId":"158","endLine":12,"endColumn":16},{"ruleId":"155","severity":1,"message":"165","line":13,"column":3,"nodeType":"157","messageId":"158","endLine":13,"endColumn":16},{"ruleId":"155","severity":1,"message":"166","line":15,"column":10,"nodeType":"157","messageId":"158","endLine":15,"endColumn":17},{"ruleId":"167","severity":1,"message":"168","line":16,"column":6,"nodeType":"169","endLine":16,"endColumn":8,"suggestions":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'uploading' is assigned a value but never used.","Identifier","unusedVar",["171"],["172"],"'AddEditProjectForm' is defined but never used.","'Tasks' is defined but never used.","'fetchProject' is defined but never used.","'updateProject' is defined but never used.","'fetchProjects' is defined but never used.","'addTask' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [dispatch]",{"range":"176","text":"177"},[510,512],"[dispatch]"]