[{"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\index.js":"1","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\App.js":"2","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\HomeScreen.js":"3","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\LoginScreen.js":"4","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Header.js":"6","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\store.js":"7","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\RegistrationScreen.js":"8","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\employeeReducers.js":"9","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\employeeConstants.js":"10","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\employeeActions.js":"11","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Message.js":"12","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Spinner.js":"13","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProfileScreen.js":"14","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeProfileScreen.js":"15","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\projectReducers.js":"16","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\projectConstants.js":"17","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\projectActions.js":"18","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectScreen.js":"19"},{"size":300,"mtime":1611358439826,"results":"20","hashOfConfig":"21"},{"size":1047,"mtime":1612674149039,"results":"22","hashOfConfig":"21"},{"size":898,"mtime":1612670616920,"results":"23","hashOfConfig":"21"},{"size":2439,"mtime":1612400456532,"results":"24","hashOfConfig":"21"},{"size":179,"mtime":1611361707674,"results":"25","hashOfConfig":"21"},{"size":2945,"mtime":1612753983338,"results":"26","hashOfConfig":"21"},{"size":1208,"mtime":1613178107744,"results":"27","hashOfConfig":"21"},{"size":2122,"mtime":1612400471903,"results":"28","hashOfConfig":"21"},{"size":2875,"mtime":1612927385249,"results":"29","hashOfConfig":"21"},{"size":1146,"mtime":1612927385249,"results":"30","hashOfConfig":"21"},{"size":4884,"mtime":1613096916306,"results":"31","hashOfConfig":"21"},{"size":151,"mtime":1612237225111,"results":"32","hashOfConfig":"21"},{"size":244,"mtime":1612399766640,"results":"33","hashOfConfig":"21"},{"size":5906,"mtime":1613180862274,"results":"34","hashOfConfig":"21"},{"size":867,"mtime":1612672967813,"results":"35","hashOfConfig":"21"},{"size":2033,"mtime":1613178130774,"results":"36","hashOfConfig":"21"},{"size":802,"mtime":1613178016889,"results":"37","hashOfConfig":"21"},{"size":2789,"mtime":1613200113012,"results":"38","hashOfConfig":"21"},{"size":858,"mtime":1613015929095,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ncunky",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\index.js",[],["82","83"],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\App.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Header.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\store.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\RegistrationScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\employeeReducers.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\employeeConstants.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\employeeActions.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Message.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Spinner.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProfileScreen.js",["84","85","86","87","88","89"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  fetchEmployee,\r\n  listEmployees,\r\n  fetchMe,\r\n  updateAvatar,\r\n} from '../redux/actions/employeeActions';\r\n\r\nimport Spinner from '../components/Spinner';\r\nimport Message from '../components/Message';\r\nimport { Link } from 'react-router-dom';\r\nimport { projectsFetch } from '../redux/reducers/projectReducers';\r\nimport {\r\n  fetchActiveProjects,\r\n  fetchProjects,\r\n} from '../redux/actions/projectActions';\r\n\r\nconst ProfileScreen = () => {\r\n  const [hidden, setHidden] = useState(true);\r\n\r\n  const {\r\n    user,\r\n    loading: userLoading,\r\n    error: userError,\r\n    success: userSuccess,\r\n  } = useSelector((state) => state.meFetch);\r\n  const {\r\n    projects,\r\n    loading: projectsLoading,\r\n    error: projectsError,\r\n    success: projectsSuccess,\r\n  } = useSelector((state) => state.activeProjectsFetch);\r\n\r\n  // console.log(user, loading);\r\n\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  // States\r\n  // const { users, loading, success, error } = useSelector(\r\n  //   (state) => state.employeesList\r\n  // );\r\n  // const { projects, loading, error, success } = useSelector(\r\n  //   (state) => state.projectsFetch\r\n  // );\r\n\r\n  // const clickHandler = () => {\r\n  //   console.log('clicked');\r\n  //   dispatch(listEmployees());\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // The if statement is to prevent fetching the logged in user everytime they go to their profile page, since the logged in user's info is already in the state\r\n    if (!user) {\r\n      dispatch(fetchMe());\r\n    }\r\n    if (user) {\r\n      setAvatar(user.avatar);\r\n    }\r\n\r\n    if (user && user.role !== 'employee') {\r\n      dispatch(fetchActiveProjects());\r\n    }\r\n\r\n    // dispatch(fetchProjects());\r\n  }, [dispatch, user]);\r\n\r\n  const handleAvatarUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('avatar', file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-date',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/v1/upload', formData, config);\r\n      // console.log(data);\r\n      setAvatar(data);\r\n      setUploading(false);\r\n      dispatch(updateAvatar(data));\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      setUploading(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className='page profile-page'>\r\n      <div className='container flex flex-jcc flex-aifs'>\r\n        {/* <button className='btn m-2' onClick={clickHandler}>\r\n          List Employees\r\n        </button> */}\r\n        {(userLoading || projectsLoading) && <Spinner />}\r\n        {userError && <Message>{userError}</Message>}\r\n        {projectsError && <Message>{projectsError}</Message>}\r\n        {userSuccess && projectsSuccess && user && (\r\n          <div className='display flex flex-fdc my-1'>\r\n            <div className='display__image'>\r\n              <div\r\n                className='image-upload my-1'\r\n                onMouseEnter={() => setHidden(false)}\r\n                onMouseLeave={() => setHidden(true)}\r\n              >\r\n                <img src={avatar} />\r\n                <form className={hidden ? 'hidden' : 'shown'}>\r\n                  <label htmlFor='file-input'>\r\n                    <div>\r\n                      <div>Update</div>\r\n                    </div>\r\n                  </label>\r\n\r\n                  <input\r\n                    id='file-input'\r\n                    type='file'\r\n                    onChange={handleAvatarUpload}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div className='h-line'></div>\r\n            <div className='display__body'>\r\n              <div className='my-1'>\r\n                <h4>\r\n                  Username : <span>{user.name}</span>\r\n                </h4>\r\n                <h4>\r\n                  Email : <span>{user.email}</span>\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div className='h-line'></div>\r\n            <div className='recent '>\r\n              {user && user.role !== 'employee' ? (\r\n                <div className='recent-projects my-1'>\r\n                  <h1>Recent Projects</h1>\r\n                </div>\r\n              ) : (\r\n                <div className='recent-tasks my-1'>\r\n                  <h1>Recent Tasks</h1>\r\n                </div>\r\n              )}\r\n              <ul>\r\n                {user.role !== 'employee' &&\r\n                  projects &&\r\n                  projects.map((project) => (\r\n                    <Link to={`/project/${project._id}`} key={project._id}>\r\n                      <li>\r\n                        <div className='flex'>\r\n                          <div>Name: {project.name}</div>\r\n                          <div>Status: {project.status}</div>\r\n                        </div>\r\n                        <div className='flex'>\r\n                          <div>Tasks: {project.name}</div>\r\n                          <div>Employees:{project.status}</div>\r\n                        </div>\r\n                      </li>\r\n                    </Link>\r\n                  ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* {projects && (\r\n          <div className='list'>\r\n            <ul>\r\n              {projects.map((project) => (\r\n                <Link key={project._id} to={`/project/${project._id}`}>\r\n                  <li>\r\n                    <h2>{project.name}</h2>\r\n                    <p>{project.description}</p>\r\n                  </li>\r\n                </Link>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeProfileScreen.js",["90"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Spinner from '../components/Spinner';\r\nimport { fetchEmployee } from '../redux/actions/employeeActions';\r\n\r\nconst EmployeeProfileScreen = ({ match }) => {\r\n  const id = match.params.id;\r\n\r\n  console.log(id);\r\n\r\n  const dispatch = useDispatch();\r\n  const { user, loading, success, error } = useSelector(\r\n    (state) => state.employeeFetch\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEmployee(id));\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <div className='page profile-page'>\r\n      <div className='container'>\r\n        {loading && <Spinner />}\r\n        {error && <Message>{error}</Message>}\r\n        {user && <h3>{user.name}</h3>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeProfileScreen;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\projectReducers.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\projectConstants.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\projectActions.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectScreen.js",["91"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Spinner from '../components/Spinner';\r\nimport { fetchProject } from '../redux/actions/projectActions';\r\n\r\nconst ProjectScreen = ({ match }) => {\r\n  const id = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n  const { project, loading, success, error } = useSelector(\r\n    (state) => state.projectFetch\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProject(id));\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <div className='page profile-page'>\r\n      <div className='container flex flex-jcsb flex-fdc'>\r\n        {loading && <Spinner />}\r\n        {error && <Message>{error}</Message>}\r\n        {project && <h3>{project.name}</h3>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectScreen;\r\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":5,"column":3,"nodeType":"98","messageId":"99","endLine":5,"endColumn":16},{"ruleId":"96","severity":1,"message":"100","line":6,"column":3,"nodeType":"98","messageId":"99","endLine":6,"endColumn":16},{"ruleId":"96","severity":1,"message":"101","line":14,"column":10,"nodeType":"98","messageId":"99","endLine":14,"endColumn":23},{"ruleId":"96","severity":1,"message":"102","line":17,"column":3,"nodeType":"98","messageId":"99","endLine":17,"endColumn":16},{"ruleId":"96","severity":1,"message":"103","line":39,"column":10,"nodeType":"98","messageId":"99","endLine":39,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":110,"column":17,"nodeType":"106","endLine":110,"endColumn":37},{"ruleId":"96","severity":1,"message":"107","line":13,"column":26,"nodeType":"98","messageId":"99","endLine":13,"endColumn":33},{"ruleId":"96","severity":1,"message":"107","line":11,"column":29,"nodeType":"98","messageId":"99","endLine":11,"endColumn":36},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'fetchEmployee' is defined but never used.","Identifier","unusedVar","'listEmployees' is defined but never used.","'projectsFetch' is defined but never used.","'fetchProjects' is defined but never used.","'uploading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'success' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]