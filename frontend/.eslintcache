[{"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\index.js":"1","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\App.js":"2","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\HomeScreen.js":"3","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\LoginScreen.js":"4","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Header.js":"6","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\store.js":"7","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\RegistrationScreen.js":"8","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\employeeReducers.js":"9","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\employeeConstants.js":"10","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\employeeActions.js":"11","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Message.js":"12","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Spinner.js":"13","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProfileScreen.js":"14","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeProfileScreen.js":"15","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\projectReducers.js":"16","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\projectConstants.js":"17","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\projectActions.js":"18","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectScreen.js":"19","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesScreen.js":"20","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectsScreen.js":"21","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TasksScreen.js":"22","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Projects.js":"23","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesProjectsScreen.js":"24","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\BackDrop.js":"25","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AddEditProjectForm.js":"26","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Tasks.js":"27","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\taskReducers.js":"28","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\taskConstants.js":"29","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\taskActions.js":"30","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AddEditTaskForm.js":"31","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TaskScreen.js":"32","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AssignEmployee.js":"33","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeDetailsScreen.js":"34","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Employees.js":"35"},{"size":300,"mtime":1611358439826,"results":"36","hashOfConfig":"37"},{"size":2003,"mtime":1614994958920,"results":"38","hashOfConfig":"37"},{"size":894,"mtime":1613269815809,"results":"39","hashOfConfig":"37"},{"size":2445,"mtime":1613269823180,"results":"40","hashOfConfig":"37"},{"size":179,"mtime":1611361707674,"results":"41","hashOfConfig":"37"},{"size":5503,"mtime":1613363616588,"results":"42","hashOfConfig":"37"},{"size":2044,"mtime":1615249652914,"results":"43","hashOfConfig":"37"},{"size":2128,"mtime":1613269847614,"results":"44","hashOfConfig":"37"},{"size":2879,"mtime":1614927521210,"results":"45","hashOfConfig":"37"},{"size":1146,"mtime":1612927385249,"results":"46","hashOfConfig":"37"},{"size":5353,"mtime":1613529240807,"results":"47","hashOfConfig":"37"},{"size":151,"mtime":1612237225111,"results":"48","hashOfConfig":"37"},{"size":244,"mtime":1612399766640,"results":"49","hashOfConfig":"37"},{"size":5434,"mtime":1615251161875,"results":"50","hashOfConfig":"37"},{"size":847,"mtime":1613529240808,"results":"51","hashOfConfig":"37"},{"size":3941,"mtime":1613538220047,"results":"52","hashOfConfig":"37"},{"size":1546,"mtime":1613538166517,"results":"53","hashOfConfig":"37"},{"size":8856,"mtime":1615164026771,"results":"54","hashOfConfig":"37"},{"size":6351,"mtime":1615164063620,"results":"55","hashOfConfig":"37"},{"size":141,"mtime":1613267534994,"results":"56","hashOfConfig":"37"},{"size":6819,"mtime":1613537928564,"results":"57","hashOfConfig":"37"},{"size":129,"mtime":1613269849769,"results":"58","hashOfConfig":"37"},{"size":1895,"mtime":1613539655215,"results":"59","hashOfConfig":"37"},{"size":459,"mtime":1613529240809,"results":"60","hashOfConfig":"37"},{"size":133,"mtime":1613372325964,"results":"61","hashOfConfig":"37"},{"size":1760,"mtime":1613825614857,"results":"62","hashOfConfig":"37"},{"size":1663,"mtime":1613827105090,"results":"63","hashOfConfig":"37"},{"size":4524,"mtime":1615249353231,"results":"64","hashOfConfig":"37"},{"size":1879,"mtime":1615249296517,"results":"65","hashOfConfig":"37"},{"size":9895,"mtime":1615249501580,"results":"66","hashOfConfig":"37"},{"size":1677,"mtime":1613826689576,"results":"67","hashOfConfig":"37"},{"size":8004,"mtime":1615083906831,"results":"68","hashOfConfig":"37"},{"size":2766,"mtime":1615083787204,"results":"69","hashOfConfig":"37"},{"size":154,"mtime":1614994668799,"results":"70","hashOfConfig":"37"},{"size":1750,"mtime":1615081756712,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1ncunky",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\index.js",[],["147","148"],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\App.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Header.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\store.js",["149"],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\RegistrationScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\employeeReducers.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\employeeConstants.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\employeeActions.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Message.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Spinner.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProfileScreen.js",["150","151","152"],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeProfileScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\projectReducers.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\projectConstants.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\projectActions.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectScreen.js",["153"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AddEditProjectForm from '../components/AddEditProjectForm';\r\nimport AddEditTaskForm from '../components/AddEditTaskForm';\r\nimport Message from '../components/Message';\r\nimport Spinner from '../components/Spinner';\r\nimport Tasks from '../components/Tasks';\r\nimport {\r\n  fetchProject,\r\n  updateProject,\r\n  fetchTasks,\r\n} from '../redux/actions/projectActions';\r\nimport { addTask } from '../redux/actions/taskActions';\r\n\r\nconst ProjectScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const { project, loading, error } = useSelector(\r\n    (state) => state.projectFetch\r\n  );\r\n  const { tasks, loading: tasksLoading, error: tasksError } = useSelector(\r\n    (state) => state.tasksFetch\r\n  );\r\n\r\n  const [projectName, setProjectName] = useState('');\r\n  const [projectDescription, setProjectDescription] = useState('');\r\n  const [projectNameError, setProjectNameError] = useState('');\r\n  const [projectDescriptionError, setProjectDescriptionError] = useState('');\r\n  const [showProjectForm, setShowProjectForm] = useState(false);\r\n\r\n  const [taskName, setTaskName] = useState('');\r\n  const [taskDescription, setTaskDescription] = useState('');\r\n  const [taskNameError, setTaskNameError] = useState('');\r\n  const [taskDescriptionError, setTaskDescriptionError] = useState('');\r\n  const [showTaskForm, setShowTaskForm] = useState(false);\r\n\r\n  const id = match.params.id;\r\n\r\n  // console.log(project, projectName, projectDescription);\r\n\r\n  useEffect(() => {\r\n    if (project) {\r\n      setProjectName(project.name);\r\n      setProjectDescription(project.description);\r\n      dispatch(fetchTasks(project._id));\r\n    }\r\n  }, [project]);\r\n\r\n  useEffect(() => {\r\n    // if (project) {\r\n    //   setProjectName(projectName);\r\n    //   setProjectDescription(projectDescription);\r\n    // }\r\n    dispatch(fetchProject(id));\r\n  }, [dispatch, id]);\r\n\r\n  const addTaskHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (taskName !== '' && taskDescription !== '') {\r\n      dispatch(\r\n        addTask({\r\n          project: project._id,\r\n          name: taskName,\r\n          description: taskDescription,\r\n        })\r\n      );\r\n      setTaskNameError('');\r\n      setTaskDescriptionError('');\r\n      setTaskName('');\r\n      setTaskDescription('');\r\n      setShowTaskForm(false);\r\n    } else {\r\n      if (taskName === '') {\r\n        setTaskNameError(\"Task's name is required\");\r\n      }\r\n      if (taskDescription === '') {\r\n        setTaskDescriptionError(\"Task's decsription is required\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const editProjectHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (projectName !== '' && projectDescription !== '') {\r\n      dispatch(\r\n        updateProject({\r\n          projectId: project._id,\r\n          name: projectName,\r\n          description: projectDescription,\r\n        })\r\n      );\r\n      setProjectNameError('');\r\n      setProjectDescriptionError('');\r\n      setProjectName('');\r\n      setProjectDescription('');\r\n      setShowProjectForm(false);\r\n    } else {\r\n      if (projectName === '') {\r\n        setProjectNameError(\"Project's name is required\");\r\n      }\r\n      if (projectDescription === '') {\r\n        setProjectDescriptionError(\"Project's decsription is required\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <div className='page profile-page'>\r\n    <div className='container'>\r\n      {showProjectForm && (\r\n        <AddEditProjectForm\r\n          setProjectName={setProjectName}\r\n          projectName={projectName}\r\n          projectNameError={projectNameError}\r\n          setProjectDescription={setProjectDescription}\r\n          projectDescription={projectDescription}\r\n          projectDescriptionError={projectDescriptionError}\r\n          setShowProjectForm={setShowProjectForm}\r\n          addProjectHandler={editProjectHandler}\r\n          edit={true}\r\n        />\r\n      )}\r\n      {showTaskForm && (\r\n        <AddEditTaskForm\r\n          setTaskName={setTaskName}\r\n          taskName={taskName}\r\n          taskNameError={taskNameError}\r\n          setTaskDescription={setTaskDescription}\r\n          taskDescription={taskDescription}\r\n          taskDescriptionError={taskDescriptionError}\r\n          setShowTaskForm={setShowTaskForm}\r\n          addTaskHandler={addTaskHandler}\r\n        />\r\n      )}\r\n      <div className='add-container my-1 flex flex-jcsa'>\r\n        <div\r\n          className='add-container__btn'\r\n          // onClick={() => setShowAddProjectForm(true)}\r\n        >\r\n          <div\r\n            className='btn btn--dark'\r\n            onClick={() => setShowProjectForm(true)}\r\n          >\r\n            <i className='far fa-edit'></i> Edit Project\r\n          </div>\r\n          {/* <i className='far fa-plus-square'></i> */}\r\n        </div>\r\n        <div\r\n          className='add-container__btn'\r\n          // onClick={() => setShowAddProjectForm(true)}\r\n        >\r\n          <div className='btn btn--dark' onClick={() => setShowTaskForm(true)}>\r\n            <i className='fas fa-plus'></i> Add Task\r\n          </div>\r\n          {/* <i className='far fa-plus-square'></i> */}\r\n        </div>\r\n      </div>\r\n      {loading && <Spinner />}\r\n      {error && <Message>{error}</Message>}\r\n      {project && (\r\n        <div className='project-details flex flex-fdc'>\r\n          <div className='project-summary'>\r\n            <div className='project-summary__item project-summary__item--title'>\r\n              <h3>Project's Summary</h3>\r\n            </div>\r\n            <div className='project-summary__item project-summary__item--name'>\r\n              {project.name}\r\n            </div>\r\n            <div className='project-summary__item project-summary__item--desc'>\r\n              {project.description}\r\n            </div>\r\n          </div>\r\n          <div className='h-line'></div>\r\n          <div className='project-tasks'>\r\n            <div className='project-tasks__title my-1'>\r\n              <h4>Project's Tasks</h4>\r\n            </div>\r\n            <div className='project-tasks__list'>\r\n              {tasksLoading && <Spinner />}\r\n              {tasksError && <Message>{tasksError}</Message>}\r\n              {tasks && <Tasks tasks={tasks} />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default ProjectScreen;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectsScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TasksScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Projects.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesProjectsScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\BackDrop.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AddEditProjectForm.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Tasks.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\taskReducers.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\taskConstants.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\taskActions.js",["154","155","156"],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AddEditTaskForm.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TaskScreen.js",["157","158","159","160","161","162","163","164"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport AddEditProjectForm from '../components/AddEditProjectForm';\r\nimport AddEditTaskForm from '../components/AddEditTaskForm';\r\nimport Message from '../components/Message';\r\nimport Spinner from '../components/Spinner';\r\nimport Tasks from '../components/Tasks';\r\nimport AssignEmployee from '../components/AssignEmployee';\r\nimport {\r\n  fetchProject,\r\n  updateProject,\r\n  fetchProjects,\r\n} from '../redux/actions/projectActions';\r\nimport { addTask, fetchTask, updateTask } from '../redux/actions/taskActions';\r\nimport Employees from '../components/Employees';\r\n\r\nconst TaskScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const { task, loading, error } = useSelector((state) => state.taskFetch);\r\n  const {\r\n    loading: addEmployeeLoading,\r\n    error: addEmployeeError,\r\n    success: addEmployeeSuccess,\r\n  } = useSelector((state) => state.taskEmployeeAdd);\r\n  const {\r\n    loading: removeEmployeeLoading,\r\n    error: removeEmployeeError,\r\n    success: removeEmployeeSuccess,\r\n  } = useSelector((state) => state.taskEmployeeRemove);\r\n  const { success } = useSelector((state) => state.taskUpdate);\r\n  // const { project } = useSelector((state) => state.projectFetch);\r\n  // const { projects } = useSelector((state) => state.projectsFetch);\r\n\r\n  //   const [employeeName, setEmployeeName] = useState('');\r\n  //   const [employeeDescription, setEmployeeDescription] = useState('');\r\n  //   const [employeeNameError, setEmployeeNameError] = useState('');\r\n  //   const [employeeDescriptionError, setEmployeeDescriptionError] = useState('');\r\n  //   const [showEmployeeForm, setShowEmployeeForm] = useState(false);\r\n\r\n  const [taskName, setTaskName] = useState('');\r\n  const [taskDescription, setTaskDescription] = useState('');\r\n  const [taskNameError, setTaskNameError] = useState('');\r\n  const [taskDescriptionError, setTaskDescriptionError] = useState('');\r\n  const [showTaskForm, setShowTaskForm] = useState(false);\r\n  const [showEmployeesList, setShowEmployeesList] = useState(false);\r\n\r\n  const id = match.params.id;\r\n\r\n  // console.log(project, projectName, projectDescription);\r\n\r\n  useEffect(() => {\r\n    if (task) {\r\n      setTaskName(task.name);\r\n      setTaskDescription(task.description);\r\n    }\r\n  }, [task]);\r\n\r\n  useEffect(() => {\r\n    // if (project) {\r\n    //   setProjectName(projectName);\r\n    //   setProjectDescription(projectDescription);\r\n    // }\r\n    dispatch(fetchTask(id));\r\n  }, [dispatch, id, success, addEmployeeSuccess, removeEmployeeSuccess]);\r\n\r\n  //   const addEmployeeHandler = (e) => {\r\n  //     e.preventDefault();\r\n\r\n  //     if (employeeName !== '' && employeeDescription !== '') {\r\n  //       dispatch(\r\n  //         addEmployee({\r\n  //           project: project._id,\r\n  //           name: employeeName,\r\n  //           description: employeeDescription,\r\n  //         })\r\n  //       );\r\n  //       setEmployeeNameError('');\r\n  //       setEmployeeDescriptionError('');\r\n  //       setEmployeeName('');\r\n  //       setEmployeeDescription('');\r\n  //       setShowEmployeeForm(false);\r\n  //     } else {\r\n  //       if (employeeName === '') {\r\n  //         setEmployeeNameError(\"Employee's name is required\");\r\n  //       }\r\n  //       if (employeeDescription === '') {\r\n  //         setEmployeeDescriptionError(\"Employee's decsription is required\");\r\n  //       }\r\n  //     }\r\n  //   };\r\n\r\n  const editTaskHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (taskName !== '' && taskDescription !== '') {\r\n      dispatch(\r\n        updateTask({\r\n          taskId: task._id,\r\n          name: taskName,\r\n          description: taskDescription,\r\n        })\r\n      );\r\n      setTaskNameError('');\r\n      setTaskDescriptionError('');\r\n      setTaskName('');\r\n      setTaskDescription('');\r\n      setShowTaskForm(false);\r\n    } else {\r\n      if (taskName === '') {\r\n        setTaskNameError(\"Task's name is required\");\r\n      }\r\n      if (taskDescription === '') {\r\n        setTaskDescriptionError(\"Task's decsription is required\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <div className='page profile-page'>\r\n    <div className='container'>\r\n      {/* {showProjectForm && (\r\n        <AddEditProjectForm\r\n          setProjectName={setProjectName}\r\n          projectName={projectName}\r\n          projectNameError={projectNameError}\r\n          setProjectDescription={setProjectDescription}\r\n          projectDescription={projectDescription}\r\n          projectDescriptionError={projectDescriptionError}\r\n          setShowProjectForm={setShowProjectForm}\r\n          addProjectHandler={editProjectHandler}\r\n          edit={true}\r\n        />\r\n      )} */}\r\n      {showTaskForm && (\r\n        <AddEditTaskForm\r\n          setTaskName={setTaskName}\r\n          taskName={taskName}\r\n          taskNameError={taskNameError}\r\n          setTaskDescription={setTaskDescription}\r\n          taskDescription={taskDescription}\r\n          taskDescriptionError={taskDescriptionError}\r\n          setShowTaskForm={setShowTaskForm}\r\n          addTaskHandler={editTaskHandler}\r\n          edit={true}\r\n        />\r\n      )}\r\n      {showEmployeesList && task && (\r\n        <AssignEmployee\r\n          setShowEmployeesList={setShowEmployeesList}\r\n          task={task}\r\n        />\r\n      )}\r\n      <div className='add-container my-1 flex flex-jcsa'>\r\n        <div\r\n          className='add-container__btn'\r\n          // onClick={() => setShowAddProjectForm(true)}\r\n        >\r\n          <div className='btn btn--dark' onClick={() => setShowTaskForm(true)}>\r\n            <i className='far fa-edit'></i> Edit Task\r\n          </div>\r\n          {/* <i className='far fa-plus-square'></i> */}\r\n        </div>\r\n        <div\r\n          className='add-container__btn'\r\n          // onClick={() => setShowAddProjectForm(true)}\r\n        >\r\n          <div\r\n            className='btn btn--dark'\r\n            onClick={() => setShowEmployeesList(true)}\r\n            //   onClick={() => setShowTaskForm(true)}\r\n          >\r\n            <i className='fas fa-plus'></i>/<i className='fas fa-minus'></i>\r\n            {'  '}\r\n            Employee\r\n          </div>\r\n          {/* <i className='far fa-plus-square'></i> */}\r\n        </div>\r\n      </div>\r\n      {loading && <Spinner />}\r\n      {error && <Message>{error}</Message>}\r\n      {task && (\r\n        <div className='project-details flex flex-fdc'>\r\n          <div className='project-summary'>\r\n            <div className='project-summary__item project-summary__item--title'>\r\n              <h3>Task's Summary</h3>\r\n            </div>\r\n\r\n            <div\r\n              className='project-summary__item project-summary__item--name flex'\r\n              style={{ width: '30%' }}\r\n            >\r\n              {task.project.name}{' '}\r\n              <Link to={`/project/${task.project._id}`}>\r\n                <div className='action-btn action-btn__link'>\r\n                  <i className='fas fa-external-link-alt'></i>{' '}\r\n                </div>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className='project-summary__item project-summary__item--name'>\r\n              {task.name}\r\n            </div>\r\n            <div className='project-summary__item project-summary__item--desc'>\r\n              {task.description}\r\n            </div>\r\n          </div>\r\n          <div className='h-line'></div>\r\n          <div className='project-tasks'>\r\n            <div className='project-tasks__title my-1'>\r\n              <h4>Task's Employees</h4>\r\n            </div>\r\n            <div className='project-tasks__list'>\r\n              {addEmployeeLoading && <Spinner />}\r\n              {addEmployeeError && <Message>{addEmployeeError}</Message>}\r\n              <Employees employees={task.employee} />\r\n              {/* <Tasks tasks={project.tasks} /> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default TaskScreen;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AssignEmployee.js",["165"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listEmployees } from '../redux/actions/employeeActions';\r\n\r\nimport Spinner from '../components/Spinner';\r\nimport Message from '../components/Message';\r\nimport {\r\n  addEmployeeToTask,\r\n  removeEmployeeFromTask,\r\n} from '../redux/actions/taskActions';\r\n\r\nconst AssignEmployee = ({ setShowEmployeesList, task }) => {\r\n  const dispatch = useDispatch();\r\n  const { employees, error, loading } = useSelector(\r\n    (state) => state.employeesList\r\n  );\r\n  // const { success: addEmployeeSuccess } = useSelector(\r\n  //   (state) => state.taskEmployeeAdd\r\n  // );\r\n  // const { success: removeEmployeeSuccess } = useSelector(\r\n  //   (state) => state.taskEmployeeRemove\r\n  // );\r\n\r\n  // console.log(task.employee, employees);\r\n\r\n  useEffect(() => {\r\n    dispatch(listEmployees());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* <BackDrop /> */}\r\n      {loading && <Spinner />}\r\n      {error && <Message>{error}</Message>}\r\n      <div className='employees-list-container'>\r\n        <div\r\n          className='employees-list-container__close'\r\n          onClick={() => setShowEmployeesList(false)}\r\n        >\r\n          <i className='far fa-times-circle'></i>\r\n        </div>\r\n        <ul className='employees-list'>\r\n          {employees &&\r\n            employees.map(\r\n              (employee) =>\r\n                employee.role === 'employee' && (\r\n                  <li className='employees-list__item flex' key={employee._id}>\r\n                    <div className='name'>{employee.name}</div>\r\n                    <button\r\n                      className='btn'\r\n                      onClick={() => {\r\n                        task.employee.map((x) => x._id).includes(employee._id)\r\n                          ? dispatch(\r\n                              removeEmployeeFromTask({\r\n                                taskId: task._id,\r\n                                employeeToRemoveFromTask: employee._id,\r\n                              })\r\n                            )\r\n                          : dispatch(\r\n                              addEmployeeToTask({\r\n                                taskId: task._id,\r\n                                employeeToAddToTask: employee._id,\r\n                              })\r\n                            );\r\n                        setShowEmployeesList(false);\r\n                      }}\r\n                    >\r\n                      {task.employee.map((x) => x._id).includes(employee._id)\r\n                        ? 'Remove'\r\n                        : 'Assign'}\r\n                    </button>\r\n                  </li>\r\n                )\r\n            )}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignEmployee;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeDetailsScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Employees.js",["166","167","168"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteTask } from '../redux/actions/taskActions';\r\n\r\nconst Employees = ({ employees }) => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.meFetch);\r\n  // console.log(projects);\r\n  return (\r\n    <ul className='task-employees-list'>\r\n      {employees.map((employee) => (\r\n        // <Link to={`/project/${project._id}`} key={project._id}>\r\n        <li key={employee._id}>\r\n          <div className='flex'>\r\n            <div>{employee.name}</div>\r\n            {/* <div>{task.status}</div> */}\r\n            {/* {user && (user.role === 'manager' || user.role === 'supervisor') && ( */}\r\n            <div className='action-btns flex'>\r\n              {/* <div\r\n                  className='action-btn action-btn__delete'\r\n                  onClick={() => dispatch(deleteTask(task._id))}\r\n                >\r\n                  <i className='far fa-trash-alt'></i>\r\n                </div> */}\r\n\r\n              {/* <div className='action-btn action-btn__edit'>\r\n                  <i className='far fa-edit'></i>\r\n                </div> */}\r\n\r\n              <Link to={`/admin/employee-details/${employee._id}`}>\r\n                <div className='action-btn action-btn__link'>\r\n                  <i className='fas fa-external-link-alt'></i>{' '}\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            {/* )\r\n            } */}\r\n          </div>\r\n          {/* <div className='flex'>\r\n            <div>Status</div>\r\n            <div>Employee</div>\r\n          </div> */}\r\n        </li>\r\n        // </Link>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":24,"column":3,"nodeType":"175","messageId":"176","endLine":24,"endColumn":28},{"ruleId":"173","severity":1,"message":"177","line":24,"column":27,"nodeType":"175","messageId":"176","endLine":24,"endColumn":39},{"ruleId":"173","severity":1,"message":"178","line":24,"column":48,"nodeType":"175","messageId":"176","endLine":24,"endColumn":58},{"ruleId":"173","severity":1,"message":"179","line":31,"column":10,"nodeType":"175","messageId":"176","endLine":31,"endColumn":19},{"ruleId":"180","severity":1,"message":"181","line":46,"column":6,"nodeType":"182","endLine":46,"endColumn":15,"suggestions":"183"},{"ruleId":"173","severity":1,"message":"184","line":7,"column":3,"nodeType":"175","messageId":"176","endLine":7,"endColumn":19},{"ruleId":"173","severity":1,"message":"185","line":8,"column":3,"nodeType":"175","messageId":"176","endLine":8,"endColumn":22},{"ruleId":"173","severity":1,"message":"186","line":9,"column":3,"nodeType":"175","messageId":"176","endLine":9,"endColumn":22},{"ruleId":"173","severity":1,"message":"187","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":26},{"ruleId":"173","severity":1,"message":"188","line":8,"column":8,"nodeType":"175","messageId":"176","endLine":8,"endColumn":13},{"ruleId":"173","severity":1,"message":"189","line":11,"column":3,"nodeType":"175","messageId":"176","endLine":11,"endColumn":15},{"ruleId":"173","severity":1,"message":"190","line":12,"column":3,"nodeType":"175","messageId":"176","endLine":12,"endColumn":16},{"ruleId":"173","severity":1,"message":"191","line":13,"column":3,"nodeType":"175","messageId":"176","endLine":13,"endColumn":16},{"ruleId":"173","severity":1,"message":"192","line":15,"column":10,"nodeType":"175","messageId":"176","endLine":15,"endColumn":17},{"ruleId":"173","severity":1,"message":"193","line":27,"column":14,"nodeType":"175","messageId":"176","endLine":27,"endColumn":35},{"ruleId":"173","severity":1,"message":"194","line":28,"column":12,"nodeType":"175","messageId":"176","endLine":28,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":28,"column":6,"nodeType":"182","endLine":28,"endColumn":8,"suggestions":"195"},{"ruleId":"173","severity":1,"message":"196","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":20},{"ruleId":"173","severity":1,"message":"197","line":7,"column":9,"nodeType":"175","messageId":"176","endLine":7,"endColumn":17},{"ruleId":"173","severity":1,"message":"198","line":8,"column":11,"nodeType":"175","messageId":"176","endLine":8,"endColumn":15},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'taskEmployeesFetchReducer' is defined but never used.","Identifier","unusedVar","'tasksLoading' is assigned a value but never used.","'tasksError' is assigned a value but never used.","'uploading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'TASKS_FETCH_FAIL' is defined but never used.","'TASKS_FETCH_REQUEST' is defined but never used.","'TASKS_FETCH_SUCCESS' is defined but never used.","'AddEditProjectForm' is defined but never used.","'Tasks' is defined but never used.","'fetchProject' is defined but never used.","'updateProject' is defined but never used.","'fetchProjects' is defined but never used.","'addTask' is defined but never used.","'removeEmployeeLoading' is assigned a value but never used.","'removeEmployeeError' is assigned a value but never used.",["202"],"'deleteTask' is defined but never used.","'dispatch' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [dispatch, project]",{"range":"207","text":"208"},"Update the dependencies array to be: [dispatch]",{"range":"209","text":"210"},[1742,1751],"[dispatch, project]",[886,888],"[dispatch]"]