[{"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\index.js":"1","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\App.js":"2","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\HomeScreen.js":"3","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\LoginScreen.js":"4","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Header.js":"6","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\store.js":"7","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\RegistrationScreen.js":"8","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\employeeReducers.js":"9","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\employeeConstants.js":"10","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\employeeActions.js":"11","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Message.js":"12","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Spinner.js":"13","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProfileScreen.js":"14","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeProfileScreen.js":"15","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\projectReducers.js":"16","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\projectConstants.js":"17","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\projectActions.js":"18","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectScreen.js":"19","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesScreen.js":"20","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectsScreen.js":"21","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TasksScreen.js":"22","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Projects.js":"23","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesProjectsScreen.js":"24","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\BackDrop.js":"25","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AddEditProjectForm.js":"26","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Tasks.js":"27","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\taskReducers.js":"28","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\taskConstants.js":"29","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\taskActions.js":"30","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AddEditTaskForm.js":"31","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TaskScreen.js":"32","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AssignEmployee.js":"33","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeDetailsScreen.js":"34","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Employees.js":"35","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeTaskScreen.js":"36","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeTasksScreen.js":"37"},{"size":300,"mtime":1611358439826,"results":"38","hashOfConfig":"39"},{"size":2228,"mtime":1615680142373,"results":"40","hashOfConfig":"39"},{"size":894,"mtime":1613269815809,"results":"41","hashOfConfig":"39"},{"size":2445,"mtime":1613269823180,"results":"42","hashOfConfig":"39"},{"size":179,"mtime":1611361707674,"results":"43","hashOfConfig":"39"},{"size":6014,"mtime":1615622651961,"results":"44","hashOfConfig":"39"},{"size":2367,"mtime":1615765243927,"results":"45","hashOfConfig":"39"},{"size":3054,"mtime":1615765073462,"results":"46","hashOfConfig":"39"},{"size":3547,"mtime":1615742594159,"results":"47","hashOfConfig":"39"},{"size":1482,"mtime":1615742577864,"results":"48","hashOfConfig":"39"},{"size":7853,"mtime":1615765533912,"results":"49","hashOfConfig":"39"},{"size":151,"mtime":1612237225111,"results":"50","hashOfConfig":"39"},{"size":244,"mtime":1612399766640,"results":"51","hashOfConfig":"39"},{"size":5364,"mtime":1615680547702,"results":"52","hashOfConfig":"39"},{"size":847,"mtime":1613529240808,"results":"53","hashOfConfig":"39"},{"size":3941,"mtime":1613538220047,"results":"54","hashOfConfig":"39"},{"size":1546,"mtime":1613538166517,"results":"55","hashOfConfig":"39"},{"size":10348,"mtime":1615775393727,"results":"56","hashOfConfig":"39"},{"size":11124,"mtime":1615775956006,"results":"57","hashOfConfig":"39"},{"size":141,"mtime":1613267534994,"results":"58","hashOfConfig":"39"},{"size":6819,"mtime":1613537928564,"results":"59","hashOfConfig":"39"},{"size":129,"mtime":1613269849769,"results":"60","hashOfConfig":"39"},{"size":2798,"mtime":1615604213331,"results":"61","hashOfConfig":"39"},{"size":459,"mtime":1613529240809,"results":"62","hashOfConfig":"39"},{"size":133,"mtime":1613372325964,"results":"63","hashOfConfig":"39"},{"size":1760,"mtime":1615680123047,"results":"64","hashOfConfig":"39"},{"size":2222,"mtime":1615608486517,"results":"65","hashOfConfig":"39"},{"size":5210,"mtime":1615681939433,"results":"66","hashOfConfig":"39"},{"size":2218,"mtime":1615681743538,"results":"67","hashOfConfig":"39"},{"size":12661,"mtime":1615765683927,"results":"68","hashOfConfig":"39"},{"size":1677,"mtime":1613826689576,"results":"69","hashOfConfig":"39"},{"size":8439,"mtime":1615680648668,"results":"70","hashOfConfig":"39"},{"size":2787,"mtime":1615680216560,"results":"71","hashOfConfig":"39"},{"size":154,"mtime":1614994668799,"results":"72","hashOfConfig":"39"},{"size":483,"mtime":1615680282697,"results":"73","hashOfConfig":"39"},{"size":3571,"mtime":1615766219676,"results":"74","hashOfConfig":"39"},{"size":3362,"mtime":1615680508968,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1ncunky",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\index.js",[],["155","156"],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\App.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Header.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\store.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\RegistrationScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\employeeReducers.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\employeeConstants.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\employeeActions.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Message.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Spinner.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProfileScreen.js",["157"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { fetchMe, updateAvatar } from '../redux/actions/employeeActions';\r\n\r\nimport Spinner from '../components/Spinner';\r\nimport Message from '../components/Message';\r\nimport { fetchProjects } from '../redux/actions/projectActions';\r\nimport Projects from '../components/Projects';\r\nimport { fetchMyTasks } from '../redux/actions/taskActions';\r\nimport Tasks from '../components/Tasks';\r\n\r\nconst ProfileScreen = () => {\r\n  const [hidden, setHidden] = useState(true);\r\n\r\n  const { user, loading: userLoading, error: userError } = useSelector(\r\n    (state) => state.meFetch\r\n  );\r\n  const {\r\n    projects,\r\n    loading: projectsLoading,\r\n    error: projectsError,\r\n  } = useSelector((state) => state.projectsFetch);\r\n  const { tasks } = useSelector((state) => state.myTasksFetch);\r\n\r\n  // console.log(user, loading);\r\n\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  // States\r\n  // const { users, loading, success, error } = useSelector(\r\n  //   (state) => state.employeesList\r\n  // );\r\n  // const { projects, loading, error, success } = useSelector(\r\n  //   (state) => state.projectsFetch\r\n  // );\r\n\r\n  // const clickHandler = () => {\r\n  //   console.log('clicked');\r\n  //   dispatch(listEmployees());\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // The if statement is to prevent fetching the logged in user everytime they go to their profile page, since the logged in user's info is already in the state\r\n    if (!user) {\r\n      dispatch(fetchMe());\r\n    }\r\n\r\n    if (user) {\r\n      setAvatar(user.avatar);\r\n    }\r\n\r\n    if (user && user.role !== 'employee') {\r\n      dispatch(fetchProjects({ limit: '3' }));\r\n      // dispatch(fetchProjects());\r\n    }\r\n\r\n    if (user && user.role === 'employee') {\r\n      dispatch(fetchMyTasks({ limit: '3' }));\r\n    }\r\n\r\n    // dispatch(fetchProjects());\r\n  }, [dispatch, user]);\r\n\r\n  const handleAvatarUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('avatar', file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-date',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/v1/upload', formData, config);\r\n      // console.log(data);\r\n      setAvatar(data);\r\n      setUploading(false);\r\n      dispatch(updateAvatar(data));\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      setUploading(false);\r\n    }\r\n  };\r\n  return (\r\n    // <div className='page profile-page'>\r\n    <div className='container flex flex-jcc flex-aifs'>\r\n      {/* <button className='btn m-2' onClick={clickHandler}>\r\n          List Employees\r\n        </button> */}\r\n      {(userLoading || projectsLoading) && <Spinner />}\r\n      {userError && <Message>{userError}</Message>}\r\n      {projectsError && <Message>{projectsError}</Message>}\r\n      {!userLoading && !projectsLoading && user && (\r\n        <div className='display flex flex-fdc my-1'>\r\n          <div className='display__image'>\r\n            <div\r\n              className='image-upload my-1'\r\n              onMouseEnter={() => setHidden(false)}\r\n              onMouseLeave={() => setHidden(true)}\r\n            >\r\n              <img src={avatar} alt='avatar' />\r\n              <form className={hidden ? 'hidden' : 'shown'}>\r\n                <label htmlFor='file-input'>\r\n                  <div>\r\n                    <div>Update</div>\r\n                  </div>\r\n                </label>\r\n\r\n                <input\r\n                  id='file-input'\r\n                  type='file'\r\n                  onChange={handleAvatarUpload}\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className='h-line'></div>\r\n          <div className='display__body'>\r\n            <div className='my-1'>\r\n              <h4>\r\n                Username : <span>{user.name}</span>\r\n              </h4>\r\n              <h4>\r\n                Email : <span>{user.email}</span>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div className='h-line'></div>\r\n          <div className='recent '>\r\n            {user && user.role !== 'employee' ? (\r\n              <div className='recent-projects my-1'>\r\n                <h1>Recent Projects</h1>\r\n              </div>\r\n            ) : (\r\n              <div className='recent-tasks my-1'>\r\n                <h1>Recent Tasks</h1>\r\n              </div>\r\n            )}\r\n            {user.role !== 'employee' && projects && (\r\n              <Projects projects={projects} />\r\n            )}\r\n            {user.role === 'employee' && tasks && <Tasks tasks={tasks} />}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* {projects && (\r\n          <div className='list'>\r\n            <ul>\r\n              {projects.map((project) => (\r\n                <Link key={project._id} to={`/project/${project._id}`}>\r\n                  <li>\r\n                    <h2>{project.name}</h2>\r\n                    <p>{project.description}</p>\r\n                  </li>\r\n                </Link>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )} */}\r\n    </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeProfileScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\projectReducers.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\projectConstants.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\projectActions.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectScreen.js",["158","159"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AddEditProjectForm from '../components/AddEditProjectForm';\r\nimport AddEditTaskForm from '../components/AddEditTaskForm';\r\nimport Message from '../components/Message';\r\nimport Spinner from '../components/Spinner';\r\nimport Tasks from '../components/Tasks';\r\nimport {\r\n  fetchProject,\r\n  updateProject,\r\n  fetchTasks,\r\n} from '../redux/actions/projectActions';\r\nimport { addTask } from '../redux/actions/taskActions';\r\n\r\nconst ProjectScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const { project, loading, error } = useSelector(\r\n    (state) => state.projectFetch\r\n  );\r\n  const { user } = useSelector((state) => state.meFetch);\r\n  const { tasks, loading: tasksLoading, error: tasksError } = useSelector(\r\n    (state) => state.tasksFetch\r\n  );\r\n  const {\r\n    success: addTaskSuccess,\r\n    loading: addTaskLoading,\r\n    error: addTaskError,\r\n  } = useSelector((state) => state.taskAdd);\r\n  const { success: deleteTaskSuccess } = useSelector(\r\n    (state) => state.taskDelete\r\n  );\r\n\r\n  const [projectName, setProjectName] = useState('');\r\n  const [projectDescription, setProjectDescription] = useState('');\r\n  const [projectNameError, setProjectNameError] = useState('');\r\n  const [projectDescriptionError, setProjectDescriptionError] = useState('');\r\n  const [showProjectForm, setShowProjectForm] = useState(false);\r\n\r\n  const [taskName, setTaskName] = useState('');\r\n  const [taskDescription, setTaskDescription] = useState('');\r\n  const [taskNameError, setTaskNameError] = useState('');\r\n  const [taskDescriptionError, setTaskDescriptionError] = useState('');\r\n  const [showTaskForm, setShowTaskForm] = useState(false);\r\n\r\n  const [keyword1, setKeyword1] = useState('');\r\n  const [keyword, setKeyword] = useState('');\r\n  const [status, setStatus] = useState('all');\r\n\r\n  const id = match.params.id;\r\n\r\n  // console.log(project, projectName, projectDescription);\r\n\r\n  useEffect(() => {\r\n    if (project) {\r\n      setProjectName(project.name);\r\n      setProjectDescription(project.description);\r\n      if (status === 'all') {\r\n        dispatch(fetchTasks({ projectId: project._id }));\r\n      } else {\r\n        dispatch(fetchTasks({ projectId: project._id, status }));\r\n      }\r\n    }\r\n  }, [project, dispatch, status]);\r\n\r\n  useEffect(() => {\r\n    // if (project) {\r\n    //   setProjectName(projectName);\r\n    //   setProjectDescription(projectDescription);\r\n    // }\r\n    dispatch(fetchProject(id));\r\n  }, [dispatch, id, addTaskSuccess, deleteTaskSuccess]);\r\n\r\n  const addTaskHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (taskName !== '' && taskDescription !== '') {\r\n      dispatch(\r\n        addTask({\r\n          project: project._id,\r\n          name: taskName,\r\n          description: taskDescription,\r\n        })\r\n      );\r\n      setTaskNameError('');\r\n      setTaskDescriptionError('');\r\n      setTaskName('');\r\n      setTaskDescription('');\r\n      setShowTaskForm(false);\r\n    } else {\r\n      if (taskName === '') {\r\n        setTaskNameError(\"Task's name is required\");\r\n      }\r\n      if (taskDescription === '') {\r\n        setTaskDescriptionError(\"Task's decsription is required\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const editProjectHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (projectName !== '' && projectDescription !== '') {\r\n      dispatch(\r\n        updateProject({\r\n          projectId: project._id,\r\n          name: projectName,\r\n          description: projectDescription,\r\n        })\r\n      );\r\n      setProjectNameError('');\r\n      setProjectDescriptionError('');\r\n      setProjectName('');\r\n      setProjectDescription('');\r\n      setShowProjectForm(false);\r\n    } else {\r\n      if (projectName === '') {\r\n        setProjectNameError(\"Project's name is required\");\r\n      }\r\n      if (projectDescription === '') {\r\n        setProjectDescriptionError(\"Project's decsription is required\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const searchTaskssHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword !== '') {\r\n      dispatch(fetchTasks({ projectId: project._id, keyword }));\r\n      setKeyword('');\r\n    } else {\r\n      dispatch(fetchTasks({ projectId: project._id }));\r\n    }\r\n    // else if (status === 'all') {\r\n    //   dispatch(fetchTasks({ projectId: project._id }));\r\n    // } else {\r\n    //   dispatch(fetchTasks({ projectId: project._id, status }));\r\n    // }\r\n  };\r\n\r\n  return (\r\n    // <div className='page profile-page'>\r\n    <div className='container'>\r\n      {showProjectForm && (\r\n        <AddEditProjectForm\r\n          setProjectName={setProjectName}\r\n          projectName={projectName}\r\n          projectNameError={projectNameError}\r\n          setProjectDescription={setProjectDescription}\r\n          projectDescription={projectDescription}\r\n          projectDescriptionError={projectDescriptionError}\r\n          setShowProjectForm={setShowProjectForm}\r\n          addProjectHandler={editProjectHandler}\r\n          edit={true}\r\n        />\r\n      )}\r\n      {showTaskForm && (\r\n        <AddEditTaskForm\r\n          setTaskName={setTaskName}\r\n          taskName={taskName}\r\n          taskNameError={taskNameError}\r\n          setTaskDescription={setTaskDescription}\r\n          taskDescription={taskDescription}\r\n          taskDescriptionError={taskDescriptionError}\r\n          setShowTaskForm={setShowTaskForm}\r\n          addTaskHandler={addTaskHandler}\r\n        />\r\n      )}\r\n      {user && user.role === 'manager' && (\r\n        <div className='add-container my-1 flex flex-jcsa'>\r\n          <div\r\n            className='add-container__btn'\r\n            // onClick={() => setShowAddProjectForm(true)}\r\n          >\r\n            <div\r\n              className='btn btn--dark'\r\n              onClick={() => setShowProjectForm(true)}\r\n            >\r\n              <i className='far fa-edit'></i> Edit Project\r\n            </div>\r\n            {/* <i className='far fa-plus-square'></i> */}\r\n          </div>\r\n          <div\r\n            className='add-container__btn'\r\n            // onClick={() => setShowAddProjectForm(true)}\r\n          >\r\n            <div\r\n              className='btn btn--dark'\r\n              onClick={() => setShowTaskForm(true)}\r\n            >\r\n              <i className='fas fa-plus'></i> Add Task\r\n            </div>\r\n            {/* <i className='far fa-plus-square'></i> */}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {loading && <Spinner />}\r\n      {error && <Message>{error}</Message>}\r\n      {project && (\r\n        <div className='project-details flex flex-fdc my-1'>\r\n          <div className='project-summary'>\r\n            <div className='project-summary__item project-summary__item--title text-center'>\r\n              <h3>Project's Summary</h3>\r\n            </div>\r\n            <div className='project-summary__item project-summary__item--name flex'>\r\n              <div>Project</div>\r\n              <div>{project.name}</div>\r\n            </div>\r\n            <div className='h-line'></div>\r\n            <div className='project-summary__item project-summary__item--progress flex'>\r\n              <div>Progress</div>\r\n              <div>{`${project.totalNoOfCompletedTasks}/${\r\n                project.totalNoOfTasks\r\n              } (${\r\n                project.totalNoOfTasks\r\n                  ? parseFloat(\r\n                      (project.totalNoOfCompletedTasks /\r\n                        project.totalNoOfTasks) *\r\n                        100\r\n                    ).toFixed(1)\r\n                  : parseFloat(0).toFixed(1)\r\n              }%)`}</div>\r\n            </div>\r\n            <div className='h-line'></div>\r\n            <div className='project-summary__item project-summary__item--status flex'>\r\n              <div>Status</div>\r\n              <div>{project.status}</div>\r\n            </div>\r\n            <div className='h-line'></div>\r\n            <div className='project-summary__item project-summary__item--employees flex'>\r\n              <div>Employees</div>\r\n              <div>{project.employees.length}</div>\r\n            </div>\r\n            <div className='h-line'></div>\r\n            <div className='project-summary__item project-summary__item--desc'>\r\n              <strong>Description</strong>: {project.description}\r\n            </div>\r\n          </div>\r\n          <div className='h-line'></div>\r\n          <div className='project-tasks'>\r\n            <div className='project-tasks__title my-1'>\r\n              <h4>Project's Tasks</h4>\r\n            </div>\r\n            <div className='project-tasks__list'>\r\n              <div className='actions flex flex-aife flex-fdc my-1'>\r\n                <div className='flex flex-aife' style={{ width: '100%' }}>\r\n                  <div className='search'>\r\n                    <form\r\n                      onSubmit={searchTaskssHandler}\r\n                      className='form flex flex-fdc flex-jcsa'\r\n                      style={{\r\n                        minHeight: '25px',\r\n                        width: '100%',\r\n                        border: 'none',\r\n                        padding: '0',\r\n                        boxShadow: 'none',\r\n                        borderRadius: '0',\r\n                        borderBottom: '1px solid black',\r\n                      }}\r\n                    >\r\n                      {/* <div\r\n                className='input-control'\r\n                style={{\r\n                  height: '30px',\r\n                  marginBottom: '0',\r\n                  width: '100%',\r\n                }}\r\n              > */}\r\n                      {/* <label>Keyword</label> */}\r\n                      <input\r\n                        style={{ top: '15px', width: '100%' }}\r\n                        type='text'\r\n                        placeholder='Search Tasks'\r\n                        value={keyword}\r\n                        onChange={(e) => setKeyword(e.target.value)}\r\n                      />\r\n                      {/* </div> */}\r\n                    </form>\r\n                  </div>\r\n                  <div className='filter'>\r\n                    <select\r\n                      name='status'\r\n                      value={status}\r\n                      onChange={(e) => setStatus(e.target.value)}\r\n                    >\r\n                      <option value='all'>All</option>\r\n                      <option value='not started'>Not Started</option>\r\n                      <option value='in progress'>In Progress</option>\r\n                      <option value='aborted'>Aborted</option>\r\n                      <option value='paused'>Paused</option>\r\n                      <option value='completed'>Completed</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {tasksLoading && <Spinner />}\r\n              {tasksError && <Message>{tasksError}</Message>}\r\n              {addTaskLoading && <Spinner />}\r\n              {addTaskError && <Message>{addTaskError}</Message>}\r\n              {tasks && <Tasks tasks={tasks} />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default ProjectScreen;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectsScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TasksScreen.js",[],["160","161"],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Projects.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesProjectsScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\BackDrop.js",[],["162","163"],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AddEditProjectForm.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Tasks.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\taskReducers.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\taskConstants.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\taskActions.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AddEditTaskForm.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TaskScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\AssignEmployee.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeDetailsScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Employees.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeTaskScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeTasksScreen.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":29,"column":10,"nodeType":"170","messageId":"171","endLine":29,"endColumn":19},{"ruleId":"168","severity":1,"message":"172","line":45,"column":10,"nodeType":"170","messageId":"171","endLine":45,"endColumn":18},{"ruleId":"168","severity":1,"message":"173","line":45,"column":20,"nodeType":"170","messageId":"171","endLine":45,"endColumn":31},{"ruleId":"164","replacedBy":"174"},{"ruleId":"166","replacedBy":"175"},{"ruleId":"164","replacedBy":"176"},{"ruleId":"166","replacedBy":"177"},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'uploading' is assigned a value but never used.","Identifier","unusedVar","'keyword1' is assigned a value but never used.","'setKeyword1' is assigned a value but never used.",["178"],["179"],["178"],["179"],"no-global-assign","no-unsafe-negation"]