[{"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\index.js":"1","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\App.js":"2","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\HomeScreen.js":"3","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\LoginScreen.js":"4","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Header.js":"6","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\store.js":"7","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\RegistrationScreen.js":"8","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\employeeReducers.js":"9","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\employeeConstants.js":"10","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\employeeActions.js":"11","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Message.js":"12","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Spinner.js":"13","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProfileScreen.js":"14","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeProfileScreen.js":"15","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\projectReducers.js":"16","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\projectConstants.js":"17","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\projectActions.js":"18","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectScreen.js":"19","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesScreen.js":"20","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectsScreen.js":"21","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TasksScreen.js":"22","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Projects.js":"23","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesProjectsScreen.js":"24","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\BackDrop.js":"25"},{"size":300,"mtime":1611358439826,"results":"26","hashOfConfig":"27"},{"size":1680,"mtime":1613363241082,"results":"28","hashOfConfig":"27"},{"size":894,"mtime":1613269815809,"results":"29","hashOfConfig":"27"},{"size":2445,"mtime":1613269823180,"results":"30","hashOfConfig":"27"},{"size":179,"mtime":1611361707674,"results":"31","hashOfConfig":"27"},{"size":5503,"mtime":1613363616588,"results":"32","hashOfConfig":"27"},{"size":1181,"mtime":1613360936202,"results":"33","hashOfConfig":"27"},{"size":2128,"mtime":1613269847614,"results":"34","hashOfConfig":"27"},{"size":2875,"mtime":1612927385249,"results":"35","hashOfConfig":"27"},{"size":1146,"mtime":1612927385249,"results":"36","hashOfConfig":"27"},{"size":4884,"mtime":1613096916306,"results":"37","hashOfConfig":"27"},{"size":151,"mtime":1612237225111,"results":"38","hashOfConfig":"27"},{"size":244,"mtime":1612399766640,"results":"39","hashOfConfig":"27"},{"size":5385,"mtime":1613269831796,"results":"40","hashOfConfig":"27"},{"size":873,"mtime":1613269807743,"results":"41","hashOfConfig":"27"},{"size":2702,"mtime":1613360904486,"results":"42","hashOfConfig":"27"},{"size":1042,"mtime":1613360820475,"results":"43","hashOfConfig":"27"},{"size":4864,"mtime":1613438599757,"results":"44","hashOfConfig":"27"},{"size":864,"mtime":1613269837657,"results":"45","hashOfConfig":"27"},{"size":141,"mtime":1613267534994,"results":"46","hashOfConfig":"27"},{"size":6180,"mtime":1613437890553,"results":"47","hashOfConfig":"27"},{"size":129,"mtime":1613269849769,"results":"48","hashOfConfig":"27"},{"size":706,"mtime":1613437803700,"results":"49","hashOfConfig":"27"},{"size":450,"mtime":1613363413243,"results":"50","hashOfConfig":"27"},{"size":133,"mtime":1613372325964,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1ncunky",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\index.js",[],["109","110"],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\App.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Header.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\store.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\RegistrationScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\employeeReducers.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\employeeConstants.js",[],["111","112"],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\employeeActions.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Message.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Spinner.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProfileScreen.js",["113","114","115","116","117","118","119"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  fetchEmployee,\r\n  listEmployees,\r\n  fetchMe,\r\n  updateAvatar,\r\n} from '../redux/actions/employeeActions';\r\n\r\nimport Spinner from '../components/Spinner';\r\nimport Message from '../components/Message';\r\nimport { Link } from 'react-router-dom';\r\nimport { projectsFetch } from '../redux/reducers/projectReducers';\r\nimport {\r\n  fetchActiveProjects,\r\n  fetchProjects,\r\n} from '../redux/actions/projectActions';\r\nimport Projects from '../components/Projects';\r\n\r\nconst ProfileScreen = () => {\r\n  const [hidden, setHidden] = useState(true);\r\n\r\n  const {\r\n    user,\r\n    loading: userLoading,\r\n    error: userError,\r\n    success: userSuccess,\r\n  } = useSelector((state) => state.meFetch);\r\n  const {\r\n    projects,\r\n    loading: projectsLoading,\r\n    error: projectsError,\r\n    success: projectsSuccess,\r\n  } = useSelector((state) => state.projectsFetch);\r\n\r\n  // console.log(user, loading);\r\n\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  // States\r\n  // const { users, loading, success, error } = useSelector(\r\n  //   (state) => state.employeesList\r\n  // );\r\n  // const { projects, loading, error, success } = useSelector(\r\n  //   (state) => state.projectsFetch\r\n  // );\r\n\r\n  // const clickHandler = () => {\r\n  //   console.log('clicked');\r\n  //   dispatch(listEmployees());\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // The if statement is to prevent fetching the logged in user everytime they go to their profile page, since the logged in user's info is already in the state\r\n    if (!user) {\r\n      dispatch(fetchMe());\r\n    }\r\n    if (user) {\r\n      setAvatar(user.avatar);\r\n    }\r\n\r\n    if (user && user.role !== 'employee') {\r\n      dispatch(fetchProjects({ status: 'active', limit: '3' }));\r\n      // dispatch(fetchProjects());\r\n    }\r\n\r\n    // dispatch(fetchProjects());\r\n  }, [dispatch, user]);\r\n\r\n  const handleAvatarUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('avatar', file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-date',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/v1/upload', formData, config);\r\n      // console.log(data);\r\n      setAvatar(data);\r\n      setUploading(false);\r\n      dispatch(updateAvatar(data));\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      setUploading(false);\r\n    }\r\n  };\r\n  return (\r\n    // <div className='page profile-page'>\r\n      <div className='container flex flex-jcc flex-aifs'>\r\n        {/* <button className='btn m-2' onClick={clickHandler}>\r\n          List Employees\r\n        </button> */}\r\n        {(userLoading || projectsLoading) && <Spinner />}\r\n        {userError && <Message>{userError}</Message>}\r\n        {projectsError && <Message>{projectsError}</Message>}\r\n        {userSuccess && projectsSuccess && user && (\r\n          <div className='display flex flex-fdc my-1'>\r\n            <div className='display__image'>\r\n              <div\r\n                className='image-upload my-1'\r\n                onMouseEnter={() => setHidden(false)}\r\n                onMouseLeave={() => setHidden(true)}\r\n              >\r\n                <img src={avatar} />\r\n                <form className={hidden ? 'hidden' : 'shown'}>\r\n                  <label htmlFor='file-input'>\r\n                    <div>\r\n                      <div>Update</div>\r\n                    </div>\r\n                  </label>\r\n\r\n                  <input\r\n                    id='file-input'\r\n                    type='file'\r\n                    onChange={handleAvatarUpload}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div className='h-line'></div>\r\n            <div className='display__body'>\r\n              <div className='my-1'>\r\n                <h4>\r\n                  Username : <span>{user.name}</span>\r\n                </h4>\r\n                <h4>\r\n                  Email : <span>{user.email}</span>\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div className='h-line'></div>\r\n            <div className='recent '>\r\n              {user && user.role !== 'employee' ? (\r\n                <div className='recent-projects my-1'>\r\n                  <h1>Recent Projects</h1>\r\n                </div>\r\n              ) : (\r\n                <div className='recent-tasks my-1'>\r\n                  <h1>Recent Tasks</h1>\r\n                </div>\r\n              )}\r\n              {user.role !== 'employee' && projects && (\r\n                <Projects projects={projects} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* {projects && (\r\n          <div className='list'>\r\n            <ul>\r\n              {projects.map((project) => (\r\n                <Link key={project._id} to={`/project/${project._id}`}>\r\n                  <li>\r\n                    <h2>{project.name}</h2>\r\n                    <p>{project.description}</p>\r\n                  </li>\r\n                </Link>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeeProfileScreen.js",["120"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Spinner from '../components/Spinner';\r\nimport { fetchEmployee } from '../redux/actions/employeeActions';\r\n\r\nconst EmployeeProfileScreen = ({ match }) => {\r\n  const id = match.params.id;\r\n\r\n  console.log(id);\r\n\r\n  const dispatch = useDispatch();\r\n  const { user, loading, success, error } = useSelector(\r\n    (state) => state.employeeFetch\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEmployee(id));\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    // <div className='page profile-page'>\r\n      <div className='container'>\r\n        {loading && <Spinner />}\r\n        {error && <Message>{error}</Message>}\r\n        {user && <h3>{user.name}</h3>}\r\n      </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeProfileScreen;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\reducers\\projectReducers.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\constants\\projectConstants.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\redux\\actions\\projectActions.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectScreen.js",["121"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Spinner from '../components/Spinner';\r\nimport { fetchProject } from '../redux/actions/projectActions';\r\n\r\nconst ProjectScreen = ({ match }) => {\r\n  const id = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n  const { project, loading, success, error } = useSelector(\r\n    (state) => state.projectFetch\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProject(id));\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    // <div className='page profile-page'>\r\n      <div className='container flex flex-jcsb flex-fdc'>\r\n        {loading && <Spinner />}\r\n        {error && <Message>{error}</Message>}\r\n        {project && <h3>{project.name}</h3>}\r\n      </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default ProjectScreen;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\ProjectsScreen.js",["122","123","124","125"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchProjects, addProject } from '../redux/actions/projectActions';\r\n\r\nimport Projects from '../components/Projects';\r\nimport Spinner from '../components/Spinner';\r\nimport Message from '../components/Message';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BackDrop from '../components/BackDrop';\r\n\r\nconst ProjectsScreen = () => {\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const { user, loading: userLoading } = useSelector((state) => state.meFetch);\r\n  // console.log(user);\r\n  const { projects, error, loading, success } = useSelector(\r\n    (state) => state.projectsFetch\r\n  );\r\n\r\n  console.log(projects);\r\n\r\n  const [keyword1, setKeyword1] = useState('');\r\n  const [keyword, setKeyword] = useState('');\r\n  const [status, setStatus] = useState('active');\r\n  const [showAddProjectForm, setShowAddProjectForm] = useState(false);\r\n  const [projectName, setProjectName] = useState('');\r\n  const [projectDescription, setProjectDescription] = useState('');\r\n  const [projectNameError, setProjectNameError] = useState('');\r\n  const [projectDescriptionError, setProjectDescriptionError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (keyword !== '') {\r\n      dispatch(fetchProjects({ keyword }));\r\n      setKeyword('');\r\n    } else if (status === 'all') {\r\n      dispatch(fetchProjects());\r\n    } else {\r\n      dispatch(fetchProjects({ status }));\r\n    }\r\n  }, [keyword, status, dispatch]);\r\n\r\n  const searchProjectsHandler = (e) => {\r\n    e.preventDefault();\r\n    setKeyword(keyword1);\r\n    setKeyword1('');\r\n  };\r\n\r\n  const addProjectHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      addProject({ name: projectName, description: projectDescription })\r\n    );\r\n    if (projectName !== '' && projectDescription !== '') {\r\n      //add the project\r\n      setProjectNameError('');\r\n      setProjectDescriptionError('');\r\n      setProjectName('');\r\n      setProjectDescription('');\r\n      setShowAddProjectForm(false);\r\n    } else {\r\n      if (projectName === '') {\r\n        setProjectNameError(\"Project's name is required\");\r\n      }\r\n      if (projectDescription === '') {\r\n        setProjectDescriptionError(\"Project's decsription is required\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      {showAddProjectForm && (\r\n        <>\r\n          <BackDrop />\r\n          <form className='form add-project-form' onSubmit={addProjectHandler}>\r\n            <div className='input-control'>\r\n              <label>Project's Name</label>\r\n              <input\r\n                type='text'\r\n                placeholder=\"Enter Project's Name\"\r\n                value={projectName}\r\n                onChange={(e) => setProjectName(e.target.value)}\r\n              />\r\n              {projectNameError && <small>{projectNameError}</small>}\r\n            </div>\r\n            <div className='input-control' style={{ height: '140px' }}>\r\n              <label>Project's Description</label>\r\n              <textarea\r\n                placeholder=\"Enter Project's Name\"\r\n                rows='5'\r\n                // cols='35'\r\n                value={projectDescription}\r\n                onChange={(e) => setProjectDescription(e.target.value)}\r\n              />\r\n              {projectDescriptionError && (\r\n                <small>{projectDescriptionError}</small>\r\n              )}\r\n            </div>\r\n            <div className='flex'>\r\n              <button className='btn btn--add' type='submit'>\r\n                Add Project\r\n              </button>\r\n              <button\r\n                className='btn'\r\n                onClick={() => setShowAddProjectForm(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </>\r\n      )}\r\n\r\n      <div className='actions flex flex-aife flex-fdc my-1'>\r\n        <div className='add-container'>\r\n          <div\r\n            className='add-container__btn'\r\n            onClick={() => setShowAddProjectForm(true)}\r\n          >\r\n            <div className='btn btn--dark'>\r\n              <i className='fas fa-plus'></i> Add Project\r\n            </div>\r\n            {/* <i className='far fa-plus-square'></i> */}\r\n          </div>\r\n        </div>\r\n        <div className='flex flex-aife' style={{ width: '100%' }}>\r\n          <div className='search'>\r\n            <form\r\n              onSubmit={searchProjectsHandler}\r\n              className='form flex flex-fdc flex-jcsa'\r\n              style={{\r\n                minHeight: '25px',\r\n                width: '100%',\r\n                border: 'none',\r\n                padding: '0',\r\n                boxShadow: 'none',\r\n                borderRadius: '0',\r\n                borderBottom: '1px solid black',\r\n              }}\r\n            >\r\n              {/* <div\r\n                className='input-control'\r\n                style={{\r\n                  height: '30px',\r\n                  marginBottom: '0',\r\n                  width: '100%',\r\n                }}\r\n              > */}\r\n              {/* <label>Keyword</label> */}\r\n              <input\r\n                style={{ top: '15px', width: '100%' }}\r\n                type='text'\r\n                placeholder='Search Projects'\r\n                value={keyword1}\r\n                onChange={(e) => setKeyword1(e.target.value)}\r\n              />\r\n              {/* </div> */}\r\n            </form>\r\n          </div>\r\n          <div className='filter'>\r\n            <select\r\n              name='status'\r\n              value={status}\r\n              onChange={(e) => setStatus(e.target.value)}\r\n            >\r\n              <option value='all'>All</option>\r\n              <option value='active'>Active</option>\r\n              <option value='completed'>Completed</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {loading && <Spinner />}\r\n      {error && <Message>{error}</Message>}\r\n      <div className='display-projects flex flex-aifs flex-fdc'>\r\n        {projects && <Projects projects={projects} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectsScreen;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\TasksScreen.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\Projects.js",[],"C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\screens\\EmployeesProjectsScreen.js",["126"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst EmployeesProjectsScreen = () => {\r\n  const { user } = useSelector((state) => state.meFetch);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (!user) {\r\n      history.push('/login');\r\n    }\r\n  }, [user]);\r\n  return <div>Employees Projects</div>;\r\n};\r\n\r\nexport default EmployeesProjectsScreen;\r\n","C:\\Users\\14385\\Desktop\\Personal Projects\\project-manager\\frontend\\src\\components\\BackDrop.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":5,"column":3,"nodeType":"135","messageId":"136","endLine":5,"endColumn":16},{"ruleId":"133","severity":1,"message":"137","line":6,"column":3,"nodeType":"135","messageId":"136","endLine":6,"endColumn":16},{"ruleId":"133","severity":1,"message":"138","line":13,"column":10,"nodeType":"135","messageId":"136","endLine":13,"endColumn":14},{"ruleId":"133","severity":1,"message":"139","line":14,"column":10,"nodeType":"135","messageId":"136","endLine":14,"endColumn":23},{"ruleId":"133","severity":1,"message":"140","line":16,"column":3,"nodeType":"135","messageId":"136","endLine":16,"endColumn":22},{"ruleId":"133","severity":1,"message":"141","line":40,"column":10,"nodeType":"135","messageId":"136","endLine":40,"endColumn":19},{"ruleId":"142","severity":1,"message":"143","line":112,"column":17,"nodeType":"144","endLine":112,"endColumn":37},{"ruleId":"133","severity":1,"message":"145","line":13,"column":26,"nodeType":"135","messageId":"136","endLine":13,"endColumn":33},{"ruleId":"133","severity":1,"message":"145","line":11,"column":29,"nodeType":"135","messageId":"136","endLine":11,"endColumn":36},{"ruleId":"133","severity":1,"message":"146","line":12,"column":9,"nodeType":"135","messageId":"136","endLine":12,"endColumn":16},{"ruleId":"133","severity":1,"message":"147","line":15,"column":11,"nodeType":"135","messageId":"136","endLine":15,"endColumn":15},{"ruleId":"133","severity":1,"message":"148","line":15,"column":26,"nodeType":"135","messageId":"136","endLine":15,"endColumn":37},{"ruleId":"133","severity":1,"message":"145","line":17,"column":37,"nodeType":"135","messageId":"136","endLine":17,"endColumn":44},{"ruleId":"149","severity":1,"message":"150","line":12,"column":6,"nodeType":"151","endLine":12,"endColumn":12,"suggestions":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],"no-unused-vars","'fetchEmployee' is defined but never used.","Identifier","unusedVar","'listEmployees' is defined but never used.","'Link' is defined but never used.","'projectsFetch' is defined but never used.","'fetchActiveProjects' is defined but never used.","'uploading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'success' is assigned a value but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.","'userLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["155"],"no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},"Update the dependencies array to be: [history, user]",{"range":"158","text":"159"},[352,358],"[history, user]"]